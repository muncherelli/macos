---
- name: Install/Update Software
  hosts: localhost

  vars:
    dockitems_remove:
      - "App Store"
      - Calendar
      - Contacts
      - FaceTime
      - Freeform
      - Launchpad
      - Maps
      - Messages
      - Music
      - News
      - Notes
      - Photos
      - Reminders
      - "System Settings"
      - TV
    dockitems_persist:
      - name: "Safari"
        path: "/Applications/Safari.app"
        pos: 1
      - name: "Brave Browser"
        path: "/Applications/Brave Browser.app"
        pos: 2
      - name: "Mail"
        path: "/Applications/Mail.app"
        pos: 3
      - name: "Sublime Text"
        path: "/Applications/Sublime Text.app"
        pos: 4

    homebrew_installed_packages:
      - nvm
      - virt-manager
      - wget
    homebrew_cask_apps:
      - adobe-creative-cloud
      - brave-browser
      - github
      - font-victor-mono
      - plex
      - sublime-text
      - visual-studio-code
      - zed

    mas_installed_apps:
      - { id: 1091189122, name: "Bear" }
      - { id: 417375580, name: "BetterSnapTool" }
      - { id: 1560048103, name: "DefleMask" }
      - { id: 1543920362, name: "Displaperture" }
      - { id: 424389933, name: "Final Cut Pro" }
      - { id: 949582631, name: "HDHomeRun" }
      - { id: 1518036000, name: "Sequel Ace" }
      - { id: 1538878817, name: "UTM" }
      - { id: 497799835, name: "Xcode" }
    mas_uninstalled_apps: []

  pre_tasks:
    - name: dockutil utility
      become: false
      community.general.homebrew:
        name: dockutil
        state: present

    - name: Check for Oh My Zsh installation
      ansible.builtin.stat:
        path: ~/.oh-my-zsh
      register: oh_my_zsh_installed

  tasks:
    - name: Hush login
      ansible.builtin.shell: touch ~/.hushlogin

    - name: Oh My Zsh
      ansible.builtin.shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      args:
        creates: ~/.oh-my-zsh
      environment:
        PATH: "{{ ansible_env.PATH }}"

    - name: MesloLGS NF Regular (font)
      ansible.builtin.get_url:
        url: https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf
        dest: ~/Library/Fonts/MesloLGS NF Regular.ttf

    - name: MesloLGS NF Bold (font)
      ansible.builtin.get_url:
        url: https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf
        dest: ~/Library/Fonts/MesloLGS NF Bold.ttf

    - name: MesloLGS NF Italic (font)
      ansible.builtin.get_url:
        url: https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf
        dest: ~/Library/Fonts/MesloLGS NF Italic.ttf

    - name: MesloLGS NF Bold Italic (font)
      ansible.builtin.get_url:
        url: https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf
        dest: ~/Library/Fonts/MesloLGS NF Bold Italic.ttf

    - name: Powerlevel10k theme
      ansible.builtin.git:
        repo: "https://github.com/romkatv/powerlevel10k.git"
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/powerlevel10k"
        depth: 1

    - name: Set ZSH_THEME
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        regexp: "^ZSH_THEME="
        line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'
        create: yes

    - name: SoundSource
      ansible.builtin.shell: |
        curl -o ~/Downloads/SoundSource.zip https://cdn.rogueamoeba.com/soundsource/download/SoundSource.zip && \
        unzip -o ~/Downloads/SoundSource.zip -d /Applications/
        rm ~/Downloads/SoundSource.zip
      args:
        creates: /Applications/SoundSource.app
      environment:
        PATH: "{{ ansible_env.PATH }}"

    - name: Audio Hijack
      ansible.builtin.shell: |
        curl -o ~/Downloads/AudioHijack.zip https://cdn.rogueamoeba.com/audiohijack/download/AudioHijack.zip && \
        unzip -o ~/Downloads/AudioHijack.zip -d /Applications/
        rm ~/Downloads/AudioHijack.zip
      args:
        creates: /Applications/Audio Hijack.app
      environment:
        PATH: "{{ ansible_env.PATH }}"

    - name: Loopback
      ansible.builtin.shell: |
        curl -o ~/Downloads/Loopback.zip https://cdn.rogueamoeba.com/loopback/download/Loopback.zip && \
        unzip -o ~/Downloads/Loopback.zip -d /Applications/
        rm ~/Downloads/Loopback.zip
      args:
        creates: /Applications/Loopback.app
      environment:
        PATH: "{{ ansible_env.PATH }}"

    - name: Run OS Script
      ansible.builtin.shell: ./os.sh
      args:
        chdir: "{{ playbook_dir }}"

    - name: Clone zsh-autosuggestions repository
      git:
        repo: "https://github.com/zsh-users/zsh-autosuggestions"
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
        update: yes

    - name: Ensure zsh-autosuggestions is added to plugins list in .zshrc
      lineinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        regexp: '^plugins=\('
        line: "plugins=(git zsh-autosuggestions)"
        state: present
        backrefs: yes

    - name: Clone zsh-syntax-highlighting repository
      git:
        repo: "https://github.com/zsh-users/zsh-syntax-highlighting.git"
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
        update: yes

    - name: Ensure zsh-syntax-highlighting is added to plugins list in .zshrc
      lineinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        regexp: '^plugins=\('
        line: "plugins=(git zsh-autosuggestions zsh-syntax-highlighting)"
        state: present
        backrefs: yes

    - name: Ensure nvm configuration is added to .zshrc
      blockinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        block: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
          [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR NVM"
      become: yes

  roles:
    - name: geerlingguy.mac.homebrew
    - name: geerlingguy.mac.mas
    - name: geerlingguy.mac.dock
